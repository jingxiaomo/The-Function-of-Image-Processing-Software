<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Dlls</name>
    </assembly>
    <members>
        <member name="T:Dlls.Capture">
            <summary>
            捕获图像 定时捕获
            </summary>
        </member>
        <member name="M:Dlls.Capture.Catch(System.String,System.Int32)">
            <summary>
            捕获图像
            </summary>
            <param name="VideoName">视频路径</param>
            <param name="f">捕获第f帧</param>
            <returns>第f帧的图像矩阵</returns>
        </member>
        <member name="M:Dlls.Capture.TimeCatch(System.String,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            定时捕获
            </summary>
            <param name="now">当前视频路径</param>
            <param name="save">保存视频路径 示例：C:\\Users\\a\\Desktop\\</param>
            <param name="f">当前帧数</param>
            <param name="t">捕获间隔（秒）</param>
            <param name="cnt">捕获张数</param>
        </member>
        <member name="M:Dlls.Stitch.Stitching(OpenCvSharp.Mat[],System.Int32)">
            <summary>
            图像拼接
            </summary>
            <param name="mats">图像数组</param>
            <param name="num">图像数量</param>
            <returns>拼接后的图像</returns>
        </member>
        <member name="T:Dlls.Mood">
            <summary>
            模式处理
            </summary>
        </member>
        <member name="M:Dlls.Mood.ToGrey(OpenCvSharp.Mat)">
            <summary>
            灰度化
            </summary>
            <param name="img">原图像矩阵</param>
            <returns>新图像矩阵</returns>
        </member>
        <member name="M:Dlls.Mood.BriAndCon(OpenCvSharp.Mat,System.Int32,System.Int32)">
            <summary>
            改变亮度和对比度
            </summary>
            <param name="src">原图像矩阵</param>
            <param name="alpha">对比度数值（初始为100，范围为[0,300]）</param>        
            <param name="beta">亮度数值（初始为0，范围为[-150,-150]）</param>
            <returns>新图像矩阵</returns>
        </member>
        <member name="M:Dlls.Mood.RGBColorAdjust(OpenCvSharp.Mat,System.Int32,System.Int32,System.Int32)">
            <summary>
            RGB颜色调整（包括在颜色调整里面）
            </summary>
            <param name="img">原图像矩阵</param>
            <param name="Rdel">R通道的偏差值[-255,255]</param>
            <param name="Gdel">G通道的偏差值[-255,255]</param>
            <param name="Bdel">B通道的偏差值[-255,255]</param>
            <returns>新图像矩阵</returns>
        </member>
        <member name="M:Dlls.Mood.HLSColorAdjust(OpenCvSharp.Mat,System.Int32,System.Int32,System.Int32)">
            <summary>
            HLS颜色调整（包括在颜色调整里面）
            </summary>
            <param name="img">原图像矩阵</param>
            <param name="Hdel">H通道的偏差值[-255,255]</param>
            <param name="Ldel">L通道的偏差值[-255,255]</param>
            <param name="Sdel">S通道的偏差值[-255,255]</param>
            <returns>新图像矩阵</returns>
        </member>
        <member name="M:Dlls.Mood.HSVColorAdjust(OpenCvSharp.Mat,System.Int32,System.Int32,System.Int32)">
            <summary>
            HSV颜色调整（包括在颜色调整里面）
            </summary>
            <param name="img">原图像矩阵</param>
            <param name="Hdel">H通道的偏差值[-255,255]</param>
            <param name="Sdel">S通道的偏差值[-255,255]</param>
            <param name="Vdel">V通道的偏差值[-255,255]</param>
            <returns>新图像矩阵</returns>
        </member>
        <member name="M:Dlls.Mood.TakeColor(OpenCvSharp.Mat,System.Int32)">
            <summary>
            提色
            </summary>
            <param name="img">原图像矩阵</param>
            <param name="type">颜色类型（0：红色；1：绿色；2：蓝色）</param>
            <returns>新图像矩阵</returns>
        </member>
        <member name="M:Dlls.Mood.FilterColor(OpenCvSharp.Mat,System.Int32)">
            <summary>
            滤色
            </summary>
            <param name="img">原图像矩阵</param>
            <param name="type">颜色类型（0：红色；1：绿色；2：蓝色）</param>
            <returns>新图像矩阵</returns>
        </member>
        <member name="M:Dlls.Mood.Hist(OpenCvSharp.Mat,System.Single@,System.Single[]@,System.Int32)">
            <summary>
            直方图
            如果是灰度图，显示明度直方图；如果是RGB图，显示红色、绿色、蓝色直方图。
            </summary>
            <param name="img">图像矩阵</param>
            <param name="cnt">图像总像素</param>
            <param name="val">各个通道像素值的像素值</param>
            <param name="type">通道类型（如果是灰度图，0：明度直方图；如果是RGB图，0：红色直方图、1：绿色直方图、2：蓝色直方图）。</param>
        </member>
        <member name="M:Dlls.Mood.Cut(OpenCvSharp.Mat,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            裁剪
            </summary>
            <param name="img">原图像矩阵</param>
            <param name="ll">左上角点的x坐标</param>
            <param name="lr">左上角点的y坐标</param>
            <param name="width">选择框的长度</param>
            <param name="height">选择框的宽度</param>
            <returns>裁剪后的矩阵</returns>
        </member>
        <member name="M:Dlls.Mood.Reverse(OpenCvSharp.Mat)">
            <summary>
            反色
            </summary>
            <param name="img">原图像矩阵</param>
            <returns>新图像矩阵</returns>
        </member>
        <member name="M:Dlls.Mood.ImageSize(OpenCvSharp.Mat,System.Int32,System.Int32,System.Int32)">
            <summary>
            图像大小
            </summary>
            <param name="img">原图像矩阵</param>
            <param name="width">宽度（只能为整数）</param>
            <param name="height">高度（只能为整数）</param>
            <param name="type">插值方式（1：线性插值，2：区域插值，3：三次样条插值）</param>
            <returns></returns>
        </member>
        <member name="T:Dlls.Process">
            <summary>
            处理
            </summary>
        </member>
        <member name="M:Dlls.Process.Blur(OpenCvSharp.Mat,System.Int32,System.Int32)">
            <summary>
            均值滤波
            </summary>
            <param name="img">原图像矩阵</param>
            <param name="size">内核大小（3×3/5×5/7×7）</param>
            <param name="times">迭代次数[1,10]</param>
            <returns>新图像矩阵</returns>
        </member>
        <member name="M:Dlls.Process.Gaus(OpenCvSharp.Mat,System.Int32,System.Int32,System.Int32)">
            <summary>
            高斯滤波
            </summary>
            <param name="img">原图像矩阵</param>
            <param name="size">内核大小（3：3×3/5：5×5/7：7×7）</param>
            <param name="times">迭代次数[1,10]</param>
            <param name="st">强度[1,10]</param>
            <returns>新图像矩阵</returns>
        </member>
        <member name="M:Dlls.Process.Mid(OpenCvSharp.Mat,System.Int32,System.Int32)">
            <summary>
            中值滤波
            </summary>
            <param name="img">原图像矩阵</param>
            <param name="size">内核大小</param>
            <param name="times">迭代次数</param>
            <returns></returns>
        </member>
        <member name="M:Dlls.Process.Sobel(OpenCvSharp.Mat)">
            <summary>
            Sobel
            </summary>
            <param name="img">原图像矩阵</param>
            <returns>新图像矩阵</returns>
        </member>
        <member name="M:Dlls.Process.Roberts(OpenCvSharp.Mat)">
            <summary>
            Roberts
            </summary>
            <param name="img">原图像矩阵</param>
            <returns>新图像矩阵</returns>
        </member>
        <member name="M:Dlls.Process.Canny(OpenCvSharp.Mat,System.Int32,System.Int32)">
            <summary>
            Canny
            </summary>
            <param name="img">原图像矩阵</param>
            <param name="size">内核大小</param>
            <param name="times">迭代次数</param>
            <returns></returns>
        </member>
        <member name="M:Dlls.Process.Laplacian(OpenCvSharp.Mat,System.Int32,System.Int32)">
            <summary>
            Laplacian
            </summary>
            <param name="img">原图像矩阵</param>
            <param name="size">内核大小</param>
            <param name="times">迭代次数</param>
            <returns></returns>
        </member>
        <member name="M:Dlls.Process.Dilate(OpenCvSharp.Mat,System.Int32,System.Int32)">
            <summary>
            膨胀
            </summary>
            <param name="img">原图像矩阵</param>
            <param name="type">内核类型（0：2×2正方；1：3×1行；2：1×3列；3：3×3叉；4：5×5圆；5：7×7圆；6：11×11圆）
            </param>
            <param name="times">迭代次数</param>
            <returns>新图像矩阵</returns>
        </member>
        <member name="M:Dlls.Process.Erode(OpenCvSharp.Mat,System.Int32,System.Int32)">
            <summary>
            腐蚀
            </summary>
            <param name="img">原图像矩阵</param>
            <param name="type">内核类型</param>
            <param name="times">迭代次数</param>
            <returns>新图像矩阵</returns>
        </member>
        <member name="M:Dlls.Process.Open(OpenCvSharp.Mat,System.Int32,System.Int32)">
            <summary>
            开运算
            </summary>
            <param name="img">原图像矩阵</param>
            <param name="type">内核类型</param>
            <param name="times">迭代次数</param>
            <returns>新图像矩阵</returns>
        </member>
        <member name="M:Dlls.Process.Close(OpenCvSharp.Mat,System.Int32,System.Int32)">
            <summary>
            闭运算
            </summary>
            <param name="img">原图像矩阵</param>
            <param name="type">内核类型</param>
            <param name="times">迭代次数</param>
            <returns>新图像矩阵</returns>
        </member>
        <member name="M:Dlls.Process.Grad(OpenCvSharp.Mat,System.Int32,System.Int32)">
            <summary>
            （形态学）梯度
            </summary>
            <param name="img">原图像矩阵</param>
            <param name="type">内核类型（0：3×3；1：5×5；2：7×7）</param>
            <param name="times">迭代次数</param>
            <returns>新图像矩阵</returns>
        </member>
        <member name="M:Dlls.Process.TopHat(OpenCvSharp.Mat,System.Int32,System.Int32)">
            <summary>
             顶帽
             </summary>
             <param name="img">原图像矩阵</param>
             <param name="type">内核类型（0：3×3；1：5×5；2：7×7）</param>
             <param name="times">迭代次数</param>
             <returns>新图像矩阵</returns>
        </member>
        <member name="M:Dlls.Process.BlackHat(OpenCvSharp.Mat,System.Int32,System.Int32)">
            <summary>
             黑帽
             </summary>
             <param name="img">原图像矩阵</param>
             <param name="type">内核类型（0：3×3；1：5×5；2：7×7）</param>
             <param name="times">迭代次数</param>
             <returns>新图像矩阵</returns>
        </member>
        <member name="M:Dlls.Process.ToTwo(OpenCvSharp.Mat,System.Int32)">
            <summary>
            二值化
            </summary>
            <param name="img">原图像矩阵</param>
            <param name="thre">阈值</param>
            <returns>新图像矩阵</returns>
        </member>
        <member name="T:Dlls.Properties.Resources">
            <summary>
              一个强类型的资源类，用于查找本地化的字符串等。
            </summary>
        </member>
        <member name="T:Dlls.Rotate">
            <summary>
            旋转
            </summary>
        </member>
        <member name="M:Dlls.Rotate.Rot90(OpenCvSharp.Mat)">
            <summary>
            顺时针90度
            </summary>
            <param name="matSrc">原图像矩阵</param>
            <returns>新图像矩阵</returns>
        </member>
        <member name="M:Dlls.Rotate.Rot180(OpenCvSharp.Mat)">
            <summary>
            顺时针180度
            </summary>
            <param name="matSrc">原图像矩阵</param>
            <returns>新图像矩阵</returns>
        </member>
        <member name="M:Dlls.Rotate.Rot270(OpenCvSharp.Mat)">
            <summary>
            顺时针270度
            </summary>
            <param name="matSrc">原图像矩阵</param>
            <returns>新图像矩阵</returns>
        </member>
        <member name="M:Dlls.Rotate.ImgRotate(OpenCvSharp.Mat,System.Double,System.Boolean)">
            <summary>
            任意角度旋转
            </summary>
            <param name="matSrc">原图像矩阵</param>
            <param name="angle">角度</param>
            <param name="direction">顺时针或逆时针(true表示逆时针)</param>
            <returns>新图像矩阵</returns>
        </member>
        <member name="M:Dlls.Rotate.HoriRot(OpenCvSharp.Mat)">
            <summary>
            水平翻转
            </summary>
            <param name="matSrc">原图像矩阵</param>
            <returns>新图像矩阵</returns>
        </member>
        <member name="M:Dlls.Rotate.VertRot(OpenCvSharp.Mat)">
            <summary>
            垂直翻转
            </summary>
            <param name="matSrc">原图像矩阵</param>
            <returns>新图像矩阵</returns>
        </member>
        <member name="T:Dlls.Open">
            <summary>
            打开图片 打开视频 保存图片
            </summary>
        </member>
        <member name="M:Dlls.Open.OpenImage(System.String)">
            <summary>
            打开图片
            </summary>
            <param name="s">图片路径</param>
            <returns>图像矩阵</returns>
        </member>
        <member name="M:Dlls.Open.OpenVideo(System.String)">
            <summary>
            打开视频
            </summary>
            <param name="s">视频路径</param>
        </member>
        <member name="M:Dlls.Open.SaveImage(System.String,OpenCvSharp.Mat)">
            <summary>
            保存图片
            </summary>
            <param name="s">图片保存路径</param>
            <param name="image">图像矩阵</param>
        </member>
    </members>
</doc>
